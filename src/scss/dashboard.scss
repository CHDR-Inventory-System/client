@import './variables';

// Needs to be outside of .dashboard since this component
// renders outside of the root react app
.table-filter-dropdown {
  padding: 1.5em 1em;

  .ant-input {
    margin-bottom: 1em;
  }

  .ant-btn {
    width: 100%;
    padding-top: 4px;
    padding-bottom: 4px;
  }

  .filter-actions {
    display: flex;
    gap: 1em;
  }
}

// This is the styling for the message that gets displayed
// under the <Select /> dropdown. Because this renders outside
// of the root react app, it needs to be outside of .dashboard
.select-menu-details {
  margin: 0;
  padding: 6px 12px;
  color: map-get($colors, 'text-muted');
  cursor: default;
}

.dashboard {
  $table-border-radius: 8px;

  .ant-table {
    border-radius: $table-border-radius;
    color: hsl(0deg, 0%, 30%);
  }

  // Prevents the table header from changing color on hover
  // if this column is sortable
  .ant-table-cell.ant-table-column-has-sorters:hover {
    background-color: map-get($colors, 'monochromatic-1');
  }

  .ant-table-content {
    border-radius: $table-border-radius;
  }

  .ant-table-column-title {
    user-select: none;
  }

  // Applies to only the first row of the table
  .ant-table-thead > tr > th {
    color: white;
    padding-left: 2em;
    padding-right: 2em;
    background-color: map-get($colors, 'monochromatic-1');
    user-select: none;
  }

  // Applies to subsequent table rows
  .ant-table-tbody > tr > td {
    padding-left: 2em;
    padding-right: 2em;
    padding: 1.5em 2em;
    cursor: pointer;
  }

  // Removes the shadows that appear on the left and the right of the
  // table body when you try to scroll horizontally
  .ant-table-container table > thead > tr:first-child th:first-child {
    border-top-left-radius: $table-border-radius;
  }

  .ant-table-container table > thead > tr:first-child th:last-child {
    border-top-right-radius: $table-border-radius;
  }

  // Removes the shadows that appear to the left and right of the
  // table when scrolling horizontally
  .ant-table-ping-left:not(.ant-table-has-fix-left) .ant-table-container::before,
  .ant-table-ping-right:not(.ant-table-has-fix-right) .ant-table-container::after {
    box-shadow: none;
  }

  .ant-tabs-nav {
    margin-bottom: 2em;
    width: 85%;
    margin: 0 auto;
  }

  .ant-card {
    box-shadow: 0px 0px 8px 4px rgba(0, 0, 0, 0.07);
    border-radius: $table-border-radius;
    width: 85%;
    margin: 2em;

    @media screen and (max-width: 1000px) {
      max-width: 90%;
    }
  }

  .ant-card-body {
    padding: 0px;
  }

  .ant-tabs-tabpane {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
  }

  .ant-table-cell:hover {
    svg {
      opacity: 1;
    }
  }

  // Applies to the icon in the table's body
  // (specifically the role column in the user table)
  td.ant-table-cell .ant-dropdown-trigger {
    display: flex;
    align-items: center;

    &:hover svg {
      opacity: 1 !important;
    }

    svg {
      transition: opacity 0.2s ease-in-out;
      opacity: 0;
      margin-left: 0.5em;

      @media screen and (max-width: 750px) {
        opacity: 1;
      }
    }
  }

  // Applies to the icons in the table header
  .ant-dropdown-trigger.ant-table-filter-trigger {
    background-color: transparent;

    &:hover {
      color: white;
    }
  }

  .ant-table-pagination {
    padding-right: 1em;
  }

  .ant-pagination-item,
  .ant-pagination-item-link {
    border-radius: 4px;
    border: none;
  }

  .ant-pagination-item:hover,
  .ant-pagination-item-link:hover,
  .ant-pagination-item-active {
    border-color: map-get($colors, 'monochromatic-3');
    color: map-get($colors, 'monochromatic-3');

    & a {
      color: map-get($colors, 'monochromatic-3');
    }
  }
}
