// If the styling for any ant component needs to be overridden and should
// stay consistent across the site, it should go in here. Any specific
// styling should go in a separate scss file IMPORTANT: Any styling
// put in here will affect every component of the app. Because
// of specificity, some styles may need !important.
@import './variables';
@import './mixins';

.ant-btn {
  border: none;
  border-radius: 6px;
  padding-top: 18px;
  padding-bottom: 18px;
  display: flex;
  justify-content: center;
  align-items: center;

  &:hover {
    color: map-get($colors, 'monochromatic-2');
  }

  &.ant-btn-primary {
    background-color: map-get($colors, 'monochromatic-1');

    &:hover {
      color: white;
      background-color: map-get($colors, 'monochromatic-3');
    }
  }

  &.ant-btn-link,
  &.ant-btn-link:hover,
  &.ant-btn-link:focus,
  &.ant-btn-ghost:hover,
  &.ant-btn-ghost:focus {
    color: map-get($colors, 'monochromatic-3');
  }

  &:disabled,
  &:disabled:hover {
    background-color: hsl(0deg, 0%, 60%);
    color: white;
  }
}

.ant-form-item-explain.ant-form-item-explain-connected,
.ant-form-item-explain-error {
  margin-bottom: 0.5em;
}

// Refers to inputs as well as the password input in a form
.ant-input,
.ant-btn.ant-btn.ant-btn-primary,
.ant-input-affix-wrapper {
  border-radius: 6px;

  &:focus {
    border-color: map-get($colors, 'monochromatic-3');
    box-shadow: none;
  }

  &:hover {
    border-color: map-get($colors, 'monochromatic-3') !important;
  }
}

// This class wraps the input so we need to make sure
// only the outer element has a border radius while
// the inner input element doesn't
.ant-input-affix-wrapper > input {
  border-radius: 0;
}

.ant-input-affix-wrapper-focused {
  box-shadow: none;
  border-color: map-get($colors, 'monochromatic-3');
}

.ant-col.ant-form-item-label {
  @include font-fallback('Gotham-Medium');
}

.ant-input {
  // Increase the input size on mobile to prevent the device
  // from zooming into the field by default
  @media screen and (max-width: 500px) {
    font-size: 16px;
  }
}

.ant-input-show-count-has-suffix {
  margin-right: 4px;
}

// Slightly improves the contrast of gray text on a white card
.ant-card-meta-description {
  color: map-get($colors, 'text-muted');
}

.ant-alert {
  border-radius: 6px;
}

.ant-alert-message {
  @include font-fallback('Gotham-Medium');
}

.ant-avatar {
  @include font-fallback('Gotham-Medium');

  background-color: map-get($colors, 'monochromatic-1');
  width: 42px;
  height: 42px;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  font-size: 1.25em;

  @media screen and (max-width: 600px) {
    width: 32px;
    height: 32px;
    font-size: 1em;
  }
}

.ant-tabs-tab {
  @include font-fallback('Gotham-Medium');

  &:hover {
    color: map-get($colors, 'monochromatic-3');
  }

  &.ant-tabs-tab-active .ant-tabs-tab-btn {
    color: map-get($colors, 'monochromatic-3');
    text-shadow: 0 0 0.25px map-get($colors, 'monochromatic-3');
  }
}

.ant-tabs-ink-bar,
.ant-tabs-ink-bar-animated {
  background: map-get($colors, 'monochromatic-3');
}

.ant-dropdown-menu-item {
  padding: 8px 12px;
  color: hsl(0deg, 0%, 30%);
}

.ant-modal-content {
  border-radius: 6px;
}

.ant-modal-confirm-btns {
  display: flex;
}

.ant-modal-confirm-content {
  b {
    @include font-fallback('Gotham-Medium');
  }

  p {
    margin-bottom: 0;
  }
}

.ant-dropdown-menu-item-disabled {
  color: rgba(0, 0, 0, 25%);
}

.ant-table-filter-dropdown {
  @media screen and (min-width: 700px) {
    min-width: 250px;
  }
}

.ant-dropdown-menu-item:hover,
.ant-dropdown-menu-item-selected {
  background-color: map-get($colors, 'monochromatic-5');
}

.ant-checkbox-checked .ant-checkbox-inner {
  background-color: map-get($colors, 'monochromatic-3');
  border-color: map-get($colors, 'monochromatic-3');
}
